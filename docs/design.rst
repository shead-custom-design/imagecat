.. image:: ../artwork/logo.png
  :width: 200px
  :align: right

.. _design:

Design
======


.. _image-collections:

Image Collections
-----------------

In Imagecat, the overwhelming majority of operators either generate, modify, or
consume `Image Collections`, making them one of the most important datatypes in
the library.  An image collection is a set of named images (`planes`) which are
usually all the same resolution.  For example, a simple image collection
generated by the :class:`imagecat.file` operator might contain an image plane
"C" containing RGB color information, and an image plane "A" containing an
alpha channel.  More sophisticated workflows typical in 3D computer graphics
might involve image collections containing dozens of planes containing color,
depth, normal, and lighting information.

Regardless, every image collection is simply a Python :class:`dict` storing
:class:`str` for the keys (names), and :class:`numpy.ndarray` for the values
(images).  Any string is a valid plane name, although some names are more common by
convention, including "C" for RGB color information and "A" for alpha channels.
Image arrays always have three dimensions, in (row, column, channel) order, and
typically store linear floating point values, instead of the gamma-adjusted
unsigned bytes with which you may be familiar.  Note that the third dimension
is present even for single-channel images like alpha channels and masks, in
which case its size will be one.  When working with image arrays, be careful to
keep in mind that (row, column) slicing is the opposite of the (x, y) ordering
that you are likely accustomed to.
